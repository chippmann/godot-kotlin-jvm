name: ðŸªŸ Windows Builds
on:
  workflow_call:
    inputs:
      godot-version:
        type: string

env:
  SCONS_CACHE_MSVC_CONFIG: true

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-windows
  cancel-in-progress: true

jobs:
  build-windows:
    # Windows 10 with latest image
    runs-on: "windows-latest"
    name: ${{ matrix.name }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Editor release (target=editor)
            cache-name: windows-editor-release
            target: editor
            sconsflags: ''
            bin: "./bin/godot.windows.editor.x86_64.exe"

          - name: Editor dev (target=editor, dev_build=yes, debug_symbols=true )
            cache-name: windows-editor-dev
            target: editor
            sconsflags: dev_build=yes debug_symbols=true
            bin: "./bin/godot.windows.editor.dev.x86_64.exe"

          - name: Release template
            cache-name: windows-template_release
            target: template_release
            sconsflags: ''

          - name: Debug template
            cache-name: windows-template_debug
            target: template_debug
            sconsflags: ''

    steps:
      - name: Clone Godot Engine
        uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: ${{ inputs.godot-version }}

      - name: Clone Godot JVM module.
        uses: actions/checkout@v2
        with:
          path: modules/kotlin_jvm

      - name: Setup Godot build cache
        uses: ./.github/actions/godot-cache
        with:
          cache-name: ${{ matrix.cache-name }}
        continue-on-error: true

      - name: Setup python and scons
        uses: ./.github/actions/godot-deps

      - name: Setup MSVC problem matcher
        uses: ammaraskar/msvc-problem-matcher@master

      - name: Compilation
        uses: ./.github/actions/godot-build
        with:
          sconsflags: ${{ matrix.sconsflags }}
          platform: windows
          target: ${{ matrix.target }}

      - name: Prepare artifact
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload artifact
        uses: ./.github/actions/upload-artifact
        with:
          name: ${{ matrix.cache-name }}
